% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read-deprecated.R
\name{read-deprecated}
\alias{read-deprecated}
\alias{read}
\alias{read_file}
\title{Read data}
\usage{
read(
  .ref_file,
  .alt_file,
  .cov_file,
  ...,
  chrom = deprecated(),
  gene = deprecated()
)

read_file(.file, ..., .name = "value")
}
\arguments{
\item{.ref_file}{File path to the reference table.}

\item{.alt_file}{File path to the alternate table.}

\item{.cov_file}{File path to the coverage table.}

\item{...}{<\code{\link[dplyr:dplyr_data_masking]{data-masking}}> Expressions that
return a logical value and are used to filter the data. If multiple
expressions are included, they are combined with the \code{&} operator. Only
rows for which all conditions evaluate to \code{TRUE} are kept.}

\item{chrom}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}: The chromosome(s) to filter
to.}

\item{gene}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}: The gene(s) to filter to.}

\item{.file}{File path to a file.}

\item{.name}{The information contained in the specific file. For example
\code{"coverage"} or \code{"ref_umi_count"}.}
}
\value{
A \code{\link[tibble:tibble-package]{tibble()}}. The first six columns contain the
metadata associated with each sample and mutation. Columns \code{ref_umi_count}
and \code{alt_umi_count} contain the umi count of the reference and alternate
allele, respectively. Column \code{coverage} contains the coverage for each data
point.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

\code{read_file()} has been replaced by \code{read_tbl_reference()},
\code{read_tbl_alternate()}, and \code{read_tbl_coverage()} to provide more specific
functionality.

\code{read()} has been renamed to \code{read_tbl_ref_alt_cov()}.
}
\details{
Read files containing
\href{https://github.com/bailey-lab/MIPTools}{MIPtools'} data tables.
\code{read_file()} reads a single file. \code{read()} is a convenience function that
reads all files output by
\href{https://github.com/bailey-lab/MIPTools}{MIPtools} and combines them.
Data files include the reference table, the alternate table, and the coverage
table. Data is read lazily using the
\href{https://vroom.r-lib.org/index.html}{\code{vroom}} package. Data can be
filtered, retaining all rows that satisfy the conditions. To be retained, the
row in question must produce a value of \code{TRUE} for all conditions. Note that
when a condition evaluates to NA, the row will be dropped.
}
\section{Data structure}{

Input data must contain six rows of metadata. The metadata can vary depending
on what type of file is read, but typically contains information about the
location of a mutation. The remaining rows represent the data for each sample
sequenced. Together, the alternate, reference, and coverage tables can
provide information about mutations observed and the coverage at each site.
}

\section{Useful filter functions}{

The \code{\link[dplyr:filter]{dplyr::filter()}} function is employed to subset the rows of the data
applying the expressions in \code{...} to the column values to determine which
rows should be retained.

There are many functions and operators that are useful when constructing the
expressions used to filter the data:
\itemize{
\item \code{\link{==}}, \code{\link{>}}, \code{\link{>=}}, etc.
\item \code{\link{&}}, \code{\link{|}}, \code{\link{!}}, \code{\link[=xor]{xor()}}
\item \code{\link[=is.na]{is.na()}}
\item \code{\link[dplyr:between]{between()}}, \code{\link[dplyr:near]{near()}}
}
}

\examples{
# Get path to example file
ref_file <- miplicorn_example("reference_AA_table.csv")
alt_file <- miplicorn_example("alternate_AA_table.csv")
cov_file <- miplicorn_example("coverage_AA_table.csv")
cov_file

# Input sources -------------------------------------------------------------
# Read from a path
read_file(cov_file, .name = "coverage")
read(ref_file, alt_file, cov_file)

# You can also use paths directly
# read_file("reference_AA_table.csv")
# read("reference_AA_table.csv", "alternate_AA_table.csv", "coverage_AA_table.csv")

# Read entire file ----------------------------------------------------------
read_file(cov_file, .name = "coverage")
read(ref_file, alt_file, cov_file)

# Data filtering ------------------------------------------------------------
# Filtering by one criterion
read_file(cov_file, gene == "atp6", .name = "coverage")
read(ref_file, alt_file, cov_file, gene == "atp6")

# Filtering by multiple criteria within a single logical expression
read_file(cov_file, gene == "atp6" | targeted == "Yes", .name = "coverage")
read(ref_file, alt_file, cov_file, gene == "atp6" & targeted == "Yes")

# When multiple expressions are used, they are combined using &
read(ref_file, alt_file, cov_file, gene == "atp6", targeted == "Yes")
}
\seealso{
\code{\link[vroom:vroom]{vroom::vroom()}} \code{\link[dplyr:filter]{dplyr::filter()}}
}
\keyword{internal}
