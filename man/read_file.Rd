% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read-deprecated.R
\name{read_file}
\alias{read_file}
\title{Read data}
\usage{
read_file(.file, ..., .name = "value")
}
\arguments{
\item{.file}{File path to a file.}

\item{...}{<\code{\link[=dplyr_data_masking]{data-masking}}> Expressions that return a
logical value and are used to filter the data. If multiple expressions are
included, they are combined with the \code{&} operator. Only rows for which all
conditions evaluate to \code{TRUE} are kept.}

\item{.name}{The information contained in the specific file. For example
\code{"coverage"} or \code{"ref_umi_count"}.}
}
\value{
A \code{\link[=tibble]{tibble()}}. The first six columns contain the metadata associated
with each sample and mutation. Columns \code{ref_umi_count} and \code{alt_umi_count}
contain the umi count of the reference and alternate allele, respectively.
Column \code{coverage} contains the coverage for each data point.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

\code{read_file()} has been replaced by \code{read_tbl_reference()},
\code{read_tbl_alternate()}, and \code{read_tbl_coverage()} to provide more specific
functionality.

Read files containing
\href{https://github.com/bailey-lab/MIPTools}{MIPtools'} data tables.
\code{read_file()} reads a single file. Data files include the reference table,
the alternate table, and the coverage table. Data is read lazily using the
\href{https://vroom.r-lib.org/index.html}{\code{vroom}} package. Data can be
filtered, retaining all rows that satisfy the conditions. To be retained, the
row in question must produce a value of \code{TRUE} for all conditions. Note that
when a condition evaluates to NA, the row will be dropped.
}
\section{Data structure}{

Input data must contain six rows of metadata. The metadata can vary depending
on what type of file is read, but typically contains information about the
location of a mutation. The remaining rows represent the data for each sample
sequenced. Together, the alternate, reference, and coverage tables can
provide information about mutations observed and the coverage at each site.
}

\section{Useful filter functions}{

The \code{dplyr::filter()} function is employed to subset the rows of the data
applying the expressions in \code{...} to the column values to determine which
rows should be retained.

There are many functions and operators that are useful when constructing the
expressions used to filter the data:
\itemize{
\item \code{\link{==}}, \code{\link{>}}, \code{\link{>=}}, etc.
\item \code{\link{&}}, \code{\link{|}}, \code{\link{!}}, \code{\link[=xor]{xor()}}
\item \code{\link[=is.na]{is.na()}}
\item \code{\link[=between]{between()}}, \code{\link[=near]{near()}}
}
}

\examples{
# Get path to example file
ref_file <- miplicorn_example("reference_AA_table.csv")
ref_file

# Input sources -------------------------------------------------------------
# Read from a path
read_file(ref_file, .name = "umi")

# You can also use paths directly
# read_file("reference_AA_table.csv")

# Read entire file ----------------------------------------------------------
read_file(ref_file, .name = "umi")

# Data filtering ------------------------------------------------------------
# Filtering by one criterion
read_file(ref_file, gene == "atp6", .name = "umi")

# Filtering by multiple criteria within a single logical expression
read_file(ref_file, gene == "atp6" & targeted == "Yes", .name = "umi")
read_file(ref_file, gene == "atp6" | targeted == "Yes", .name = "umi")

# When multiple expressions are used, they are combined using &
read_file(ref_file, gene == "atp6", targeted == "Yes", .name = "umi")
}
\seealso{
\code{\link[vroom:vroom]{vroom::vroom()}} \code{\link[dplyr:filter]{dplyr::filter()}}
}
\keyword{internal}
